# -*- coding: utf-8 -*-
"""Functions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zyUKS3sOsP2uy_40zBGiDVqHYDVbQriP
"""

def function(arg1,arg2):
  return arg1+arg2

function(5,6)

def sum_arg(*arg):    # * set many arguments can be taken
    print(type(arg))
    return (sum(arg))


sum_arg(1,2,3,4,5)

import numpy as np

def rmse(pred,target):
  """
  Computes root mean squared error of two numpy ndarrays

  Args:
    pred: an ndarray of predictions
    target: an ndarray of target values

  Returns:
    The root mean squared error as a float
  """
  return np.sqrt(np.mean((pred-target)**2))

## Lambda is like nameless function where we can define variable and its functioning within

funk=lambda x,y : x + y  #lambda x,y : this part define lambda variable
                          # whereas part behind ":" defines the function of lambda
funk(2,3)

#EXample of using map( ) without lambda function

def square(x):
  return x**2

my_map=map(square,[1,2,3,4,5])    # Map takes the function and variable to put it inside

for item in my_map:
    print(item)

#Example of map() using lamda function

my_map=map(lambda x: x**2,[1,2,3,4,5])  # We define function working within lambda

for item in my_map:
    print(item)